// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for disksusagemetrics metrics.
type MetricsConfig struct {
	DiskFree         MetricConfig `mapstructure:"disk.free"`
	DiskTotal        MetricConfig `mapstructure:"disk.total"`
	DiskUsed         MetricConfig `mapstructure:"disk.used"`
	DiskUtilization  MetricConfig `mapstructure:"disk.utilization"`
	MountFree        MetricConfig `mapstructure:"mount.free"`
	MountTotal       MetricConfig `mapstructure:"mount.total"`
	MountUsed        MetricConfig `mapstructure:"mount.used"`
	MountUtilization MetricConfig `mapstructure:"mount.utilization"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		DiskFree: MetricConfig{
			Enabled: true,
		},
		DiskTotal: MetricConfig{
			Enabled: true,
		},
		DiskUsed: MetricConfig{
			Enabled: true,
		},
		DiskUtilization: MetricConfig{
			Enabled: true,
		},
		MountFree: MetricConfig{
			Enabled: true,
		},
		MountTotal: MetricConfig{
			Enabled: true,
		},
		MountUsed: MetricConfig{
			Enabled: true,
		},
		MountUtilization: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for disksusagemetrics metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
